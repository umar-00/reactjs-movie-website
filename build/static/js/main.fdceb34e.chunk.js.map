{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/Header.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/HeroImage.js","components/Grid/Grid.styles.js","components/Grid/Grid.js","components/Thumb/Thumb.styles.js","components/Thumb/Thumb.js","components/Spinner/Spinner.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/SearchBar.js","components/Button/Button.styles.js","components/Button/Button.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/BreadCrumb.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/MovieInfo.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/MovieInfoBar.js","components/Actor/Actor.styles.js","components/Actor/Actor.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","console","log","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","localSearchTerm","setLocalSearchTerm","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","e","currentTarget","value","button","Button","callBack","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","state","setState","loading","setLoading","error","setError","isBtnClicked","setIsBtnClicked","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","noImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","ContentPill","MovieInfoBar","runtime","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdceb34e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n  display: flex;\n  justify-content: center;\n  /* height: 17vh; */\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  width: 100%;\n  padding: 20px 20px;\n  /* margin: 0 auto; */\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 150px;\n\n  @media screen and (max-width: 500px) {\n    width: 100px;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\n\nconst Header = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <Link to=\"/\">\n          <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n        </Link>\n        <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconsole.log(\"key\", API_KEY);\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"original\";\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w780\";\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 20%,\n      rgba(0, 0, 0, 0.65) 100%\n    ),\n    url(${({ image }) => image}), var(--darkGrey);\n  /* background: url(${({ image }) => image}), var(--darkGrey); */\n  background-size: 100%, cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 85vh;\n  position: relative;\n  padding: 40px;\n\n  animation: animateHeroImage 1s;\n\n  @keyframes animateHeroImage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  margin: 0 auto;\n  max-width: var(--maxWidth);\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 60px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\n\nconst HeroImage = ({ image, title, text }) => {\n  console.log(image);\n  return (\n    <Wrapper image={image}>\n      <Content>\n        <Text>\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </Text>\n      </Content>\n    </Wrapper>\n  );\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default HeroImage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  margin: 0;\n  padding: 0 40px;\n\n  h1 {\n    max-width: var(--maxWidth);\n    margin: 21.5px auto;\n    color: var(--medGrey);\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  max-width: var(--maxWidth);\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Wrapper, Content } from \"./Grid.styles\";\n\nconst Grid = ({ header, children }) => {\n  return (\n    <Wrapper>\n      <h1>{header}</h1>\n      <Content>{children}</Content>\n    </Wrapper>\n  );\n};\n\nGrid.propTypes = {\n  header: PropTypes.string,\n};\n\nexport default Grid;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  border-radius: 15px;\n  transition: all 0.3s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  animation: animateThumb 0.5s;\n\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n// Styles\nimport { Image } from \"./Thumb.styles\";\n\nconst Thumb = ({ image, movieId, clickable }) => {\n  return (\n    <>\n      {clickable ? (\n        <Link to={`/${movieId}`}>\n          <Image src={image} alt=\"movie-thumb\" />\n        </Link>\n      ) : (\n        <Image src={image} alt=\"movie-thumb\" />\n      )}\n    </>\n  );\n};\n\nThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool,\n};\n\nexport default Thumb;\n","import { Spinner } from \"./Spinner.styles\";\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  margin: 20px auto;\n\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 40px;\n  background: var(--darkGrey);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  background: var(--medGrey);\n  width: 100%;\n  max-width: var(--maxWidth);\n  height: 55px;\n  margin: 20px 0;\n  border-radius: 100px;\n  padding: 5px 10px;\n\n  img {\n    width: 30px;\n    margin: 0 10px;\n  }\n\n  input {\n    background: none;\n    color: white;\n    border: none;\n    width: 100%;\n    font-size: var(--fontBig);\n  }\n\n  input:focus {\n    outline: none;\n  }\n`;\n","// import { series } from \"async\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Image\nimport searchIcon from \"../../images/search-icon.svg\";\n//Styles\nimport { Wrapper, Content } from \"./SearchBar.styles\";\n\nconst SearchBar = ({ setSearchTerm }) => {\n  const [localSearchTerm, setLocalSearchTerm] = useState(\"\");\n  const initial = useRef(true);\n\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchTerm(localSearchTerm);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, localSearchTerm]);\n\n  return (\n    <Wrapper>\n      <Content>\n        <img src={searchIcon} alt=\"search-icon\"></img>\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={(e) => setLocalSearchTerm(e.currentTarget.value)}\n          value={localSearchTerm}\n        />\n      </Content>\n    </Wrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  setSearchTerm: PropTypes.func,\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\n  display: block;\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  margin: 20px auto;\n  background: var(--darkGrey);\n  font-size: var(--fontBig);\n  border-radius: 100px;\n  border: none;\n  color: white;\n  transition: all 0.3s;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  animation: animateButton 0.5s;\n\n  @keyframes animateButton {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Wrapper } from \"./Button.styles\";\n\nconst Button = ({ text, callBack }) => {\n  return (\n    <Wrapper type=\"button\" onClick={callBack}>\n      {text}\n    </Wrapper>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  callBack: PropTypes.func,\n};\n\nexport default Button;\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n} from \"./config\";\n\nconst defaultConfig = {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    // If search term is not empty, then...\n    const endpoint = !(searchTerm === \"\")\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    console.log(searchTerm);\n    console.log(endpoint);\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async (movieId) => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async (movieId) => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken,\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData),\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken }),\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value }),\n      })\n    ).json();\n\n    return rating;\n  },\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"EUR\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\n// Returns sessionStorage corresponding with provided stateName\nexport const isPersistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n  // Parse from string to JSON object IF sessionState exists/found, ELSE return NULL\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from \"react\";\n//API\nimport API from \"../API\";\n// Helpers\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\n// Always name custom hooks starting with \"use\", following with camelCase custom name\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isBtnClicked, setIsBtnClicked] = useState(false);\n\n  console.log(\"Search Term:\", searchTerm);\n\n  const fetchMovies = async (searchTerm = \"\", page) => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n      //   console.log(movies);\n\n      setState((prev) => ({\n        ...movies,\n        results:\n          // TRUE condition: appends new movies to existing (prev) movies\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  // Initial render and search\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedState(\"homeState\");\n\n      if (sessionState) {\n        setState(sessionState);\n        return;\n      }\n    }\n    setState(initialState);\n    fetchMovies(searchTerm, 1);\n  }, [searchTerm]);\n\n  // Load more...\n  useEffect(() => {\n    if (!isBtnClicked) return;\n\n    fetchMovies(searchTerm, state.page + 1);\n\n    console.log(\"Pages: \", state.page);\n\n    setIsBtnClicked(false);\n\n    // return () => {};\n  }, [isBtnClicked, searchTerm, state.page]);\n\n  console.log(searchTerm);\n  //Write to Session Storage\n  useEffect(() => {\n    if (!searchTerm) sessionStorage.setItem(\"homeState\", JSON.stringify(state));\n  }, [searchTerm, state]);\n\n  return { state, loading, error, searchTerm, setSearchTerm, setIsBtnClicked };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n// Components\nimport HeroImage from \"./HeroImage/HeroImage\";\nimport Grid from \"./Grid/Grid\";\nimport Thumb from \"./Thumb/Thumb\";\nimport Spinner from \"./Spinner/Spinner\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport Button from \"./Button/Button\";\n// Custom Hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n// Image\nimport noImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n  // Using/loading custom Hook\n  const { state, loading, error, searchTerm, setSearchTerm, setIsBtnClicked } =\n    useHomeFetch();\n\n  console.log(state);\n\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <>\n      {searchTerm === \"\"\n        ? state.results[0] && (\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n              title={state.results[0].original_title}\n              text={state.results[0].overview}\n            />\n          )\n        : null}\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm === \"\" ? \"Popular Movies\" : \"Search Results\"}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            // key={Math.floor(Math.random() * 1000)}\n            clickable\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : noImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button\n          text=\"Load More\"\n          callBack={() => setIsBtnClicked(true)}\n        ></Button>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: var(--medGrey);\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  height: 80px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  color: white;\n  max-width: var(--maxWidth);\n  width: 100%;\n  padding: 0 20px;\n  margin: 0 auto;\n\n  span {\n    font-size: var(--fontMed);\n    padding-right: 10px;\n  }\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: var(--fontSmall);\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// Styles\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\n\nconst BreadCrumb = ({ movieTitle }) => {\n  return (\n    <Wrapper>\n      <Content>\n        <Link to=\"/\">\n          <span>Home</span>\n        </Link>\n        <span> | </span>\n        <span>{movieTitle}</span>\n      </Content>\n    </Wrapper>\n  );\n};\n\nBreadCrumb.propTypes = {\n  movieTitle: PropTypes.string,\n};\n\nexport default BreadCrumb;\n","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\n// console.log(`${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.poster_path}`);\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\n  /* background: #000; */\n  background-size: cover;\n  background-position: center;\n  padding: 40px 40px;\n  margin: 0 auto;\n  width: 100%;\n  animation: animateMovieInfo 1s;\n\n  @keyframes animateMovieInfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  background: rgb(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  .thumb-div {\n    /* height: 100px; */\n    /* margin-top: -5px; */\n    margin-bottom: -5px;\n    flex-grow: 3;\n  }\n\n  .thumb-div img {\n    overflow: hidden;\n    /* margin: auto; */\n    /* flex-grow: 3; */\n    /* width: 500px;\n    height: 665px; */\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px;\n  color: var(--white);\n  overflow: hidden;\n  flex-grow: 1;\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n    /* background: red; */\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 50%;\n    margin: 0;\n  }\n\n  .movie-overview {\n    font-size: var(--fontMed);\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      font-size: var(--fontMed);\n      margin: 0;\n      padding-top: 5px;\n    }\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Thumb from \"../Thumb/Thumb\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n\n// Styles\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\n\nimport noImage from \"../../images/no_image.jpg\";\n\nconst MovieInfo = ({ movie }) => {\n  return (\n    <Wrapper backdrop={movie.backdrop_path}>\n      <Content>\n        <div className=\"thumb-div\">\n          <Thumb\n            className=\"content-thumb\"\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : noImage\n            }\n            clickable={false}\n          />\n        </div>\n\n        <Text>\n          <h1>{movie.title}</h1>\n          <h3>PLOT</h3>\n          <p className=\"movie-overview\">{movie.overview}</p>\n\n          <div className=\"rating-director\">\n            <div>\n              <h3>RATING</h3>\n              <div className=\"score\">{movie.vote_average}</div>\n            </div>\n            <div className=\"director\">\n              <h3>DIRECTOR{movie.directors.length > 1 && \"S\"}</h3>\n              {movie.directors.map((director) => (\n                <p key={director.credit_id}>{director.name}</p>\n              ))}\n            </div>\n          </div>\n        </Text>\n      </Content>\n    </Wrapper>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieInfo;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  width: 100%;\n  padding: 0 40px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .content-div {\n    display: flex;\n    max-width: var(--maxWidth);\n\n    width: 100%;\n    background: var(--darkGrey);\n    /* padding: 0 40px; */\n    /* margin: 0 40px; */\n    gap: 30px;\n    justify-content: space-between;\n    align-items: center;\n    /* margin: 0 auto; */\n\n    @media screen and (max-width: 768px) {\n      padding: 10px 40px;\n      display: block;\n    }\n  }\n`;\n\nexport const ContentPill = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--medGrey);\n  color: white;\n  height: 55px;\n  width: 100%;\n  margin: 20px 0;\n  border-radius: 100px;\n\n  span {\n    overflow: hidden;\n    font-size: var(--fontMed);\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontSmall);\n    }\n  }\n`;\n","import React from \"react\";\n\n// Helper functions\nimport { calcTime, convertMoney } from \"../../helpers\";\n\n// Styles\nimport { Wrapper, ContentPill } from \"./MovieInfoBar.styles\";\nimport PropTypes from \"prop-types\";\n\nconst MovieInfoBar = ({ movie }) => {\n  return (\n    <Wrapper>\n      <div className=\"content-div\">\n        <ContentPill>\n          <span>Runtime: {calcTime(movie.runtime)}</span>\n        </ContentPill>\n        <ContentPill>\n          <span>Budget: {convertMoney(movie.budget)}</span>\n        </ContentPill>\n        <ContentPill>\n          <span>Box Office: {convertMoney(movie.revenue)}</span>\n        </ContentPill>\n      </div>\n    </Wrapper>\n  );\n};\n\nMovieInfoBar.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieInfoBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border: 1px solid var(--lightGrey);\n  overflow: hidden;\n  box-shadow: 2px 6px 16px -5px rgba(0, 0, 0, 0.46);\n  width: 100%;\n  border-radius: 15px;\n  padding-bottom: 10px;\n  background-color: var(--medGrey);\n  color: white;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  transition: all 0.3s;\n  height: 200px;\n  object-fit: cover;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  animation: animateActor 0.5s;\n\n  @keyframes animateActor {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  font-weight: bolder;\n  margin: 0;\n\n  h3 {\n    margin: 15px 10px 0 10px;\n    /* margin-top: 10px;\n    margin-left: 10px;\n    margin-right: 10px; */\n  }\n\n  p {\n    margin-top: 6px;\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: lighter;\n    /* color: black; */\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Styles\nimport { Wrapper, Image, Content } from \"./Actor.styles\";\n\nconst Actor = ({ name, character, imageUrl }) => {\n  return (\n    <Wrapper>\n      <Image src={imageUrl} alt=\"actor-thumbnail-image\"></Image>\n      <Content>\n        <h3>{name}</h3>\n        <p>{character}</p>\n      </Content>\n    </Wrapper>\n  );\n};\n\nActor.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imageUrl: PropTypes.string,\n};\n\nexport default Actor;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n// Config\nimport { POSTER_SIZE, IMAGE_BASE_URL } from \"../config\";\n// Components\nimport Grid from \"./Grid/Grid\";\nimport Spinner from \"./Spinner/Spinner\";\nimport BreadCrumb from \"./BreadCrumb/BreadCrumb\";\nimport MovieInfo from \"./MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar/MovieInfoBar\";\nimport Actor from \"./Actor/Actor\";\n// Hooks\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\n\n//Image\nimport noImage from \"../images/no_image.jpg\";\n\nconst Movie = () => {\n  // \"movieId\" comes from Route path for 'Movie' element in App.js\n  const { movieId } = useParams();\n\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n\n  console.log(movie);\n\n  if (loading) return <Spinner></Spinner>;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title}></BreadCrumb>\n      <MovieInfo movie={movie}></MovieInfo>\n      <MovieInfoBar movie={movie}></MovieInfoBar>\n      {/* <Actor\n        name={movie.actors[0].name}\n        character={movie.actors[0].character}\n      ></Actor> */}\n\n      <Grid header=\"Cast\">\n        {movie.actors.map((actor) => (\n          <Actor\n            key={actor.id}\n            clickable\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : noImage\n            }\n            movieId={actor.id}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\n// API\nimport API from \"../API\";\n// Helper\nimport { isPersistedState } from \"../helpers\";\n\nexport const useMovieFetch = (movieId) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  console.log(\"Movie state: \", state);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        const directors = credits.crew.filter(\n          (member) => member.job === \"Director\"\n        );\n\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors: directors,\n        });\n\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    const sessionState = isPersistedState(movieId);\n    console.log(sessionState);\n    if (sessionState) {\n      setState(sessionState);\n      setLoading(false);\n      return;\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  //Write to Session Storage\n  useEffect(() => {\n    sessionStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n\n  return { state, loading, error };\n};\n","import React from \"react\";\n\nconst NotFound = () => <div>NotFound</div>;\n\nexport default NotFound;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px; \n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535; \n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;  \n  }\n\n  body {  \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","import React from \"react\";\n\n//Routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n//Components\nimport Header from \"./components/Header/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\n// Styles\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/:movieId\" element={<Movie />} />\n      <Route path=\"/*\" element={<NotFound />} />\n    </Routes>\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}